@page "/todolist"

@rendermode InteractiveServer

<h3>ToDo List</h3>
<br />


<button type="button"
        class="btn btn-primary"
        @onclick="AddTodoItem">
    Add Todo Item
</button>
<br />
<br />

@if (todoItemsList != null && todoItemsList.Count > 0)
{
    <ul class="list-unstyled">
        @foreach (var item in todoItemsList)
        {
            <li @key="item.Id">
                <div class="row mb-2 align-items-center">
                    <div class="col-1" style="width:30px">
                        <input type="checkbox"
                               style="vertical-align:middle"
                               class="form-check"
                               @bind-value="item.IsCompleted"
                               checked="@item.IsCompleted" />
                    </div>

                    <div class="col">
                        @if (item.IsCompleted)
                        {
                            <input type="text"
                                   style="vertical-align:middle"
                                   class="form-control border-0 text-decoration-line-through"
                                   @bind-value="item.Name"
                                   disabled />
                        }
                        else
                        {
                            <input type="text"
                                   style="vertical-align:middle"
                                   class="form-control border-0"
                                   @bind-value="item.Name" />
                        }

                    </div>

                    <div class="col">
                        @if (item.IsCompleted)
                        {
                            <text>
                                Completed at: @item.DateCompleted.ToLongDateString()
                            </text>
                        }
                    </div>
                </div>
            </li>
        }
    </ul>
}


@code {

    // State
    private List<TodoItem> todoItemsList = ToDoItemsRepository.GetTodoItems();

    // Event handling - Manipulating the state.
    private void AddTodoItem()
    {
        ToDoItemsRepository.AddTodoItem(new TodoItem { Name = "New Task" });
        todoItemsList = ToDoItemsRepository.GetTodoItems(); // Reloading the List after i add an item to it

    }

}
