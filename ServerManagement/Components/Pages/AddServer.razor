@page "/servers/add"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Add Server</h3>
<br />

<EditForm Model="server" FormName="formServer" OnValidSubmit="SubmitServerForm">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        @* 1 row and 2 columns *@
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </div>
            <div class="col-6">
                <ValidationMessage For="() => server.Name"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
            <div class="col-6">
                <ValidationMessage For="() => server.City"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br />
        <button class="btn btn-primary" type="submit">Save</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>


@code {
    // Property Used to map the values from the Form to the current server ??
    // Similar to a 2 way databinding
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? server { get; set; } = new Server() { IsOnline = false };    

    // Event that fires when the submitform is triggered
    private void SubmitServerForm()
    {
        if (server != null)
        {
            ServersRepository.AddServer(server);   
            
            NavigationManager.NavigateTo("/servers");
        }               
    }
}

